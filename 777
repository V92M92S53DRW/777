#include <iostream>
#include <vector>
#include <unordered_map>

using namespace std;

int main() {
    int M, N;
    cout << "Enter the number of rows (M): ";
    cin >> M;
    cout << "Enter the number of columns (N): ";
    cin >> N;

    vector<vector<int>> matrix(M, vector<int>(N));
    cout << "Enter the elements of the matrix:" << endl;
    for (int i = 0; i < M; ++i) {
        for (int j = 0; j < N; ++j) {
            cin >> matrix[i][j];
        }
    }

    // Count occurrences of each distinct column
    unordered_map<string, int> columnOccurrences;
    for (int j = 0; j < N; ++j) {
        string columnHash;
        for (int i = 0; i < M; ++i) {
            columnHash += to_string(matrix[i][j]) + ",";
        }
        columnOccurrences[columnHash]++;
    }

    // Count similar columns to the last column
    string lastColumnHash;
    for (int i = 0; i < M; ++i) {
        lastColumnHash += to_string(matrix[i][N - 1]) + ",";
    }
    int similarColumns = columnOccurrences[lastColumnHash] - 1; // Exclude the last column itself

    cout << "Number of columns similar to the last column: " << similarColumns << endl;

    return 0;
}
